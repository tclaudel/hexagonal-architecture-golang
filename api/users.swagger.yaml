openapi: 3.0.3
info:
  title: User service
  description: User API.
  version: 0.1.0

paths:
  /users:
    get:
      tags:
        - Users
      summary: Get all users
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Users
      summary: Create a new user
      operationId: createUser
      requestBody:
        description: User object that needs to be added to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get a user by id
      operationId: getUserById
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Users
      summary: Update a user by id
      operationId: updateUserById
      parameters:
        - $ref: '#/components/parameters/UserID'
      requestBody:
        description: User object that needs to be added to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Users
      summary: Delete a user by id
      operationId: deleteUserById
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'



components:
  schemas:
    Error:
      type: object
      title: Error Message
      required:
        - message
      properties:
        message:
          type: string

    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'

    User:
      type: object
      required:
        - id
        - username
        - email
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string

    UserUpdate:
      type: object
      required:
        - username
        - email
      properties:
        username:
          type: string
        email:
          type: string

  parameters:
    UserID:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid

  responses:
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
